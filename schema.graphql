type Identity @entity {
    id: ID!
    address: String!
    displayName: String
    legalName: String
    email: String
    riot: String
    image: String
    twitter: String

    bodyMembers: [BodyMember!]! @derivedFrom(field: "identity")
    campaignContributors: [CampaignContributor!]! @derivedFrom(field: "identity")
}

type Body @entity {
    id: ID!
    creator: String!
    controller: String!
    treasury: String!
    cid: String!
    body: Int!
    access: Int!
    feeModel: Int!
    fee: BigInt!
    govAsset: Int!
    payAsset: Int!
    memberLimit: BigInt!
    metadata: BodyMetadata!
    members: [BodyMember!] @derivedFrom(field: "body")
    campaigns: [Campaign!]! @derivedFrom(field: "body")
}

type BodyMetadata @entity {
    id: ID!
    name: String!
    description: String!
    website: String
    email: String
    repo: String
    logo: String
    header: String
}

type BodyMember @entity {
    id: ID!
    body: Body!
    address: String!
    identity: Identity!
}

type Campaign @entity {
    id: ID!
    body: Body!
    creator: String!
    admin: String!
    target: BigInt!
    deposit: BigInt!
    expiry: Int!
    protocol: Int!
    governance: Int!
    cid: String!
    tokenSymbol: String!
    tokenName: String!

    isFinished: Boolean!
    isFunded: Boolean!

    contributors: [CampaignContributor]! @derivedFrom(field: "campaign")
}

type CampaignContributor @entity {
    id: ID!
    campaign: Campaign!

    address: String!
    identity: Identity!

    contributed: BigInt!
}
